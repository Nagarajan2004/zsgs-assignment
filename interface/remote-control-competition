public class ExperimentalRemoteControlCar implements RemoteControlCar {
    private int distanceTraveled = 0;
    private int numberOfVictories = 0;
    public void drive() {
        distanceTraveled += 20;
    }
    public int getDistanceTravelled() {
        return distanceTraveled;
    }
    public void setNumberOfVictories(int numberOfVictories) {
        this.numberOfVictories = numberOfVictories;
    }
    public int getNumberOfVictories(){
        return numberOfVictories;
    }
}





class ProductionRemoteControlCar implements RemoteControlCar, Comparable<RemoteControlCar>{
    private int distanceTraveled = 0;
    private int numberOfVictories = 0;
    public void drive() {
        distanceTraveled += 10;
    }
    public int getDistanceTravelled() {
        return distanceTraveled;
    }
    public int getNumberOfVictories() {
        return numberOfVictories;
    }
    public void setNumberOfVictories(int numberOfVictories) {
        this.numberOfVictories = numberOfVictories;
    }
    public int compareTo(RemoteControlCar car){
        return car.getNumberOfVictories() - this.numberOfVictories;
    }
}





public interface RemoteControlCar {
    // TODO implement the RemoteControlCar interface
    void drive();
    int getDistanceTravelled();
    int getNumberOfVictories();
}





import java.util.List;
import java.util.Collections;
public class TestTrack {
    
    public static void race(RemoteControlCar car) {
        car.drive();
    }

    public static List<ProductionRemoteControlCar> getRankedCars(List<ProductionRemoteControlCar> cars) {
        Collections.sort(cars);
        return cars;
    }

}
