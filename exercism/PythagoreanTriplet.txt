import java.util.List;
import java.util.*;
class PythagoreanTriplet {
    private final int a;
    private final int b;
    private final int c;

    PythagoreanTriplet(int a, int b, int c) {
        this.a=a;
        this.b=b;
        this.c=c;
    }

    @Override
    public boolean equals(Object o) {
        PythagoreanTriplet p = (PythagoreanTriplet)o;
        return a == p.a && b == p.b && c == p.c;
    }

    static TripletListBuilder makeTripletsList() {
         return new TripletListBuilder();
    }

    static class TripletListBuilder {
        private int sum;
        private int maxFactor = Integer.MAX_VALUE;
        
        TripletListBuilder thatSumTo(int sum) {
            this.sum=sum;
            if(maxFactor==Integer.MAX_VALUE){
                this.maxFactor=sum/2;
            }
            return this;
        }

        TripletListBuilder withFactorsLessThanOrEqualTo(int maxFactor) {
             this.maxFactor = maxFactor;
             return this;
        }

        List<PythagoreanTriplet> build() {
            List<PythagoreanTriplet> triplets = new ArrayList<>();
            for (int a = 1; a <= maxFactor; a++) {
                for (int b = a + 1; b <= maxFactor; b++) {
                    int c = sum - a - b;
                    if (c > 0 && c <= maxFactor && a * a + b * b == c * c) {
                        triplets.add(new PythagoreanTriplet(a, b, c));
                    }
                }
            }
            return triplets;
        }

    }
}
